Portuguese: 

1 - git init: Inicializa um novo repositório Git em um diretório.

2- git clone <URL>: Clona um repositório Git existente do URL especificado para o seu sistema local.

3- git add <arquivo(s)>: Adiciona alterações de arquivos ao índice, preparando-os para serem commitados.

4- git commit -m "<mensagem>": Registra as alterações preparadas no índice como um novo commit com uma mensagem descritiva.

5- git status: Exibe o status atual do seu repositório, mostrando arquivos modificados, adicionados ou não rastreados.

6- git log: Exibe um registro de todos os commits no repositório, incluindo informações sobre autores e mensagens de commit.

7- git pull: Atualiza o branch atual com as alterações do repositório remoto.

8- git push: Envia commits locais para o repositório remoto.

9- git branch: Lista todos os branches no repositório e mostra o branch atual com um asterisco.

10- git checkout <branch>: Altera para um branch específico.

11- git checkout -b <novo-branch>: Cria um novo branch e muda para ele.

12- git merge <branch>: Mescla as alterações do branch especificado no branch atual.

13- git stash: Salva temporariamente as alterações não commitadas em um stash, permitindo que você mude de branch sem comprometer essas alterações.

14- git reset <arquivo>: Remove um arquivo do índice, desfazendo o git add.

15- git remote -v: Lista os repositórios remotos configurados para o repositório local.

16- git remote add <nome-remoto> <URL>: Adiciona um novo repositório remoto ao seu projeto.

17- git fetch: Busca as atualizações do repositório remoto sem fazer o merge.

18- git tag: Lista as tags (marcadores) no repositório.

19- git branch -d <branch>: Exclui um branch após mesclá-lo.

20- git config: Configura opções do Git, como nome de usuário, endereço de e-mail e preferências.

Muito importante: 

`cd` ou `cd /caminho/completo/do/diretorio`: Muda o diretório para o caminho especificado.
`git add .`: Adiciona todas as alterações à área de preparação (staging).
`git commit -m`: Registra as alterações com uma mensagem.
`git push origin main`: Envia os commits para o repositório remoto.
`cd ..`: Navega para o diretório pai ou um nível acima.

Outros:
notepad ~/.gitconfig
nano ~/.gitconfig
==================================================================================================================================
English:

1- git init: Initializes a new Git repository in a directory.

2- git clone <URL>: Clones an existing Git repository from the specified URL to your local system.

3- git add <file(s)>: Adds file changes to the staging area, preparing them to be committed.

4- git commit -m "<message>": Records the staged changes as a new commit with a descriptive message.

5- git status: Displays the current status of your repository, showing modified, added, or untracked files.

6- git log: Shows a log of all commits in the repository, including author information and commit messages.

7- git pull: Updates the current branch with changes from the remote repository.

8- git push: Sends local commits to the remote repository.

9- git branch: Lists all branches in the repository and indicates the current branch with an asterisk.

10- git checkout <branch>: Switches to a specific branch.

11- git checkout -b <new-branch>: Creates a new branch and switches to it.

12- git merge <branch>: Merges changes from the specified branch into the current branch.

13- git stash: Temporarily saves uncommitted changes in a stash, allowing you to switch branches without losing those changes.

14- git reset <file>: Removes a file from the staging area, undoing the git add operation.

15- git remote -v: Lists the configured remote repositories for the local repository.

16- git remote add <remote-name> <URL>: Adds a new remote repository to your project.

17- git fetch: Retrieves updates from the remote repository without performing a merge.

18- git tag: Lists tags (markers) in the repository.

19- git branch -d <branch>: Deletes a branch after it has been merged.

20- git config: Configures Git options, such as username, email address, and preferences.

Very important:

cd or cd /full/path/to/directory: Change directory to the specified path.
git add .: Add all changes to the staging area.
git commit -m: Commit changes with a message.
git push origin main: Push commits to the remote repository.
cd ..: Navigate to the parent directory or one level up.

Others
notepad ~/.gitconfig
nano ~/.gitconfig 